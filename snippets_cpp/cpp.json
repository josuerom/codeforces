{ // @author josuerom
	"#ifdef ONLINE_JUDGE": {
		"prefix": "testing",
		"body": [
			"#ifndef ONLINE_JUDGE",
      	"\tfreopen(\"input.txt\", \"r\", stdin);",
      	"\tfreopen(\"output.txt\", \"w\", stdout);",
   		"#endif"
		]
	},

	"ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);": {
		"prefix": "speed",
		"body": [
			"ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);$1"
		]
	},

	"using namespace std;": {
		"prefix": "u",
		"body": [
			"using namespace std;$1"
		]
	},

	"return": {
		"prefix": "re",
		"body": [
			"return$1;"
		]
	},

	"char or string getline()": {
		"prefix": "rd",
		"body": [
			"cin.getline($1, ${2:size}, '\\n');"
		]
	},

	"for (int i = 0; i < n; i++)": {
		"prefix": "fori",
		"body": [
			"for (int ${1:i} = 0; ${1:i} < ${2:n}; ${1:i}++) {",
			"}",
		]
	},

	"for (auto $e : vec)": {
		"prefix": "fore",
		"body": [
			"for (auto &e : ${1:vector}) cin >> e;",
		]
	},

	"#include <bits/stdc++.h>": {
		"prefix": "in",
		"body": [
			"#include <bits/stdc++.h>\n"
		]
	},

	"typedef": {
		"prefix": "typ",
		"body": [
			"typedef ${1:long long ll};"
		]
	},

	"#define": {
		"prefix": "de",
		"body": [
			"#define $1"
		]
	},

	"void solve() { body }": {
		"prefix": "solve",
		"body": [
			"void solve() {",
			"\t$1",
			"}"
		]
	},

	"function main": {
		"prefix": "ma",
		"body": [
			"int main() {",
			"\t$1",
			"\treturn 0;",
			"}"
		]
	},

	"@author": {
		"prefix": "/",
		"body": [
			"/**************************************************",
			" * @author:               josuerom                *",
			" * @created:         ${CURRENT_DATE}/${CURRENT_MONTH}/${CURRENT_YEAR_SHORT} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}            *",
			"**************************************************/",
		]
	},

	"#pragma GCC optimize(\"03,unroll-loops\")": {
		"prefix": "gcc",
		"body": [
			"#pragma GCC optimize(\"03,unroll-loops\")$1"
		]
	},

	"program time()": {
		"prefix": "time",
		"body": [
			"cout << \"max time \" << (float)clock()/(CLOCKS_PER_SEC/10) << \" ms\\n\";$1"
		]
	},

   "Plantilla CodeForces": {
		"prefix": "template.cpp",
		"body": [
			"/**************************************************",
			" * @author:               josuerom                *",
			" * @created:         ${CURRENT_DATE}/${CURRENT_MONTH}/${CURRENT_YEAR_SHORT} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}            *",
			"**************************************************/",
			"//$1#pragma GCC optimize(\"03,unroll-loops\")",
			"#include <bits/stdc++.h>",
			"",
			"#define VEREDICT(a) cout << ((a) ? \"YES\" : \"NO\") << endl",
			"#define TESTCASE(tt) cin >> (tt); while ((tt)--)",
			"#define all(vec) vec.begin(), vec.end()",
			"#define rall(vec) vec.rbegin(), vec.rend()",
			"#define sz(vec) (int) vec.size()",
			"#define ll long long",
			"#define endl '\\n'",
			"",
			"using namespace std;",
			"void dbg_out() { cout << endl; }",
			"template<typename Head, typename... Tail>",
			"void dbg_out(Head H, Tail... T) { cout << ' ' << H; dbg_out(T...); }",
			"#define dbg(...) cout << \"(\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__)",
			"",
			"int $2;",
			"",
			"int main() {",
			"\tios::sync_with_stdio(false); cin.tie(0);",
			"\t$3",
			"\treturn 0;",
			"}"
		]
	},

	"Plantilla c++ para competencias": {
		"prefix": "cpp_template_to_compete",
		"body": [
			"/**************************************************",
			" * @author:               josuerom                *",
			" * @created:         ${CURRENT_DATE}/${CURRENT_MONTH}/${CURRENT_YEAR_SHORT} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}            *",
			"**************************************************/",
			"//$1#pragma GCC optimize(\"03,unroll-loops\")",
			"#include <bits/stdc++.h>",
			"",
			"#define readArray(vec) void template<typename T> void read(vector<T>&(vec)){int n=(vec).size();for(auto&e:vec) cin >> e;}",
			"#define SPEED_IO ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); cerr.tie(nullptr);",
			"#define PROGRAM_TIME cout << \"max time \" << (int)clock()/(CLOCKS_PER_SEC/10) << \" ms\\n\"",
			"#define VEREDICT(condition) cout << ((condition) ? \"YES\\n\" : \"NO\\n\") << endl",
			"#define decimals(n) cout.setf(ios::fixed, ios::floatfield); cout.precision(n+1);",
			"#define binarySearch(vec, key) sort(all(vec)); binary_search(all(vec), (key));",
			"#define forr(i, vec) for(int i = (int)(vec).size()-1; i >= 0; i--)",
			"#define mod(a, b, mod) ((((a) % (mod)) + ((b) % (mod))) % (mod))",
			"#define fori(i, b, c) for(int (i) = (b); (i) < (c); (i)++)",
			"#define rall(vec) (vec).rbegin(), (vec).rend()",
			"#define all(vec) (vec).begin(), (vec).end()",
			"#define fore(e, vec) for (auto &(e): (vec))",
			"#define isOrdered(vec) is_sorted(all(vec))",
			"#define rsort(vec) short(rall(vec))",
			"#define sz(vec) (int)(vec).size()",
			"#define sort(vec) sort(all(vec))",
			"#define mcd(a, b) gcd(a, b)",
			"#define ull unsigned long long int",
			"#define ll long long",
			"#define endl '\\n'",
			"using namespace std;",
			"",
			"void dbg_out() { cout << endl; }",
			"template<typename Head, typename... Tail>",
			"void dbg_out(Head H, Tail... T) { cout << ' ' << H; dbg_out(T...); }",
			"#define dbg(...) cout << \"[\" << #__VA_ARGS__ << \"]:\", dbg_out(__VA_ARGS__)",
			"",
			"const ll MAX = 1e9;",
			"int $2;",
			"",
			"int main() {",
			"\tSPEED_IO;",
			"\t$3",
			"\treturn 0;",
			"}"
		],
		"description": "Plantilla de C++ para competencias"
	}
}
